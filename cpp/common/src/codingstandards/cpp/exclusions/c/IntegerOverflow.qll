//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype IntegerOverflowQuery =
  TUnsignedIntegerOperationsWrapAroundQuery() or
  TIntegerConversionCausesDataLossQuery() or
  TSignedIntegerOverflowQuery() or
  TDivOrRemByZeroQuery() or
  TUseCorrectIntegerPrecisionsQuery() or
  TConstantUnsignedIntegerExpressionsWrapAroundQuery()

predicate isIntegerOverflowQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `unsignedIntegerOperationsWrapAround` query
    IntegerOverflowPackage::unsignedIntegerOperationsWrapAroundQuery() and
  queryId =
    // `@id` for the `unsignedIntegerOperationsWrapAround` query
    "c/cert/unsigned-integer-operations-wrap-around" and
  ruleId = "INT30-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `integerConversionCausesDataLoss` query
    IntegerOverflowPackage::integerConversionCausesDataLossQuery() and
  queryId =
    // `@id` for the `integerConversionCausesDataLoss` query
    "c/cert/integer-conversion-causes-data-loss" and
  ruleId = "INT31-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `signedIntegerOverflow` query
    IntegerOverflowPackage::signedIntegerOverflowQuery() and
  queryId =
    // `@id` for the `signedIntegerOverflow` query
    "c/cert/signed-integer-overflow" and
  ruleId = "INT32-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `divOrRemByZero` query
    IntegerOverflowPackage::divOrRemByZeroQuery() and
  queryId =
    // `@id` for the `divOrRemByZero` query
    "c/cert/div-or-rem-by-zero" and
  ruleId = "INT33-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `useCorrectIntegerPrecisions` query
    IntegerOverflowPackage::useCorrectIntegerPrecisionsQuery() and
  queryId =
    // `@id` for the `useCorrectIntegerPrecisions` query
    "c/cert/use-correct-integer-precisions" and
  ruleId = "INT35-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `constantUnsignedIntegerExpressionsWrapAround` query
    IntegerOverflowPackage::constantUnsignedIntegerExpressionsWrapAroundQuery() and
  queryId =
    // `@id` for the `constantUnsignedIntegerExpressionsWrapAround` query
    "c/misra/constant-unsigned-integer-expressions-wrap-around" and
  ruleId = "RULE-12-4" and
  category = "advisory"
}

module IntegerOverflowPackage {
  Query unsignedIntegerOperationsWrapAroundQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `unsignedIntegerOperationsWrapAround` query
      TQueryC(TIntegerOverflowPackageQuery(TUnsignedIntegerOperationsWrapAroundQuery()))
  }

  Query integerConversionCausesDataLossQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `integerConversionCausesDataLoss` query
      TQueryC(TIntegerOverflowPackageQuery(TIntegerConversionCausesDataLossQuery()))
  }

  Query signedIntegerOverflowQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `signedIntegerOverflow` query
      TQueryC(TIntegerOverflowPackageQuery(TSignedIntegerOverflowQuery()))
  }

  Query divOrRemByZeroQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `divOrRemByZero` query
      TQueryC(TIntegerOverflowPackageQuery(TDivOrRemByZeroQuery()))
  }

  Query useCorrectIntegerPrecisionsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `useCorrectIntegerPrecisions` query
      TQueryC(TIntegerOverflowPackageQuery(TUseCorrectIntegerPrecisionsQuery()))
  }

  Query constantUnsignedIntegerExpressionsWrapAroundQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `constantUnsignedIntegerExpressionsWrapAround` query
      TQueryC(TIntegerOverflowPackageQuery(TConstantUnsignedIntegerExpressionsWrapAroundQuery()))
  }
}
