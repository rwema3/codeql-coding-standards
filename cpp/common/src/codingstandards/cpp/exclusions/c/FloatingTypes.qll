//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype FloatingTypesQuery =
  TUncheckedRangeDomainPoleErrorsQuery() or
  TUncheckedFloatingPointConversionQuery() or
  TIntToFloatPreservePrecisionQuery() or
  TMemcmpUsedToCompareFloatsQuery()

predicate isFloatingTypesQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `uncheckedRangeDomainPoleErrors` query
    FloatingTypesPackage::uncheckedRangeDomainPoleErrorsQuery() and
  queryId =
    // `@id` for the `uncheckedRangeDomainPoleErrors` query
    "c/cert/unchecked-range-domain-pole-errors" and
  ruleId = "FLP32-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `uncheckedFloatingPointConversion` query
    FloatingTypesPackage::uncheckedFloatingPointConversionQuery() and
  queryId =
    // `@id` for the `uncheckedFloatingPointConversion` query
    "c/cert/unchecked-floating-point-conversion" and
  ruleId = "FLP34-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `intToFloatPreservePrecision` query
    FloatingTypesPackage::intToFloatPreservePrecisionQuery() and
  queryId =
    // `@id` for the `intToFloatPreservePrecision` query
    "c/cert/int-to-float-preserve-precision" and
  ruleId = "FLP36-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `memcmpUsedToCompareFloats` query
    FloatingTypesPackage::memcmpUsedToCompareFloatsQuery() and
  queryId =
    // `@id` for the `memcmpUsedToCompareFloats` query
    "c/cert/memcmp-used-to-compare-floats" and
  ruleId = "FLP37-C" and
  category = "rule"
}

module FloatingTypesPackage {
  Query uncheckedRangeDomainPoleErrorsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `uncheckedRangeDomainPoleErrors` query
      TQueryC(TFloatingTypesPackageQuery(TUncheckedRangeDomainPoleErrorsQuery()))
  }

  Query uncheckedFloatingPointConversionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `uncheckedFloatingPointConversion` query
      TQueryC(TFloatingTypesPackageQuery(TUncheckedFloatingPointConversionQuery()))
  }

  Query intToFloatPreservePrecisionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `intToFloatPreservePrecision` query
      TQueryC(TFloatingTypesPackageQuery(TIntToFloatPreservePrecisionQuery()))
  }

  Query memcmpUsedToCompareFloatsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `memcmpUsedToCompareFloats` query
      TQueryC(TFloatingTypesPackageQuery(TMemcmpUsedToCompareFloatsQuery()))
  }
}
