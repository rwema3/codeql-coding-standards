//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Declarations4Query =
  TFunctionTypesNotInPrototypeFormQuery() or
  TDeclarationsOfAnObjectSameNameAndTypeQuery() or
  TDeclarationsOfAFunctionSameNameAndTypeQuery() or
  TCompatibleDeclarationObjectDefinedQuery() or
  TCompatibleDeclarationFunctionDefinedQuery() or
  TIdentifierWithExternalLinkageOneDefinitionQuery()

predicate isDeclarations4QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `functionTypesNotInPrototypeForm` query
    Declarations4Package::functionTypesNotInPrototypeFormQuery() and
  queryId =
    // `@id` for the `functionTypesNotInPrototypeForm` query
    "c/misra/function-types-not-in-prototype-form" and
  ruleId = "RULE-8-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `declarationsOfAnObjectSameNameAndType` query
    Declarations4Package::declarationsOfAnObjectSameNameAndTypeQuery() and
  queryId =
    // `@id` for the `declarationsOfAnObjectSameNameAndType` query
    "c/misra/declarations-of-an-object-same-name-and-type" and
  ruleId = "RULE-8-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `declarationsOfAFunctionSameNameAndType` query
    Declarations4Package::declarationsOfAFunctionSameNameAndTypeQuery() and
  queryId =
    // `@id` for the `declarationsOfAFunctionSameNameAndType` query
    "c/misra/declarations-of-a-function-same-name-and-type" and
  ruleId = "RULE-8-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `compatibleDeclarationObjectDefined` query
    Declarations4Package::compatibleDeclarationObjectDefinedQuery() and
  queryId =
    // `@id` for the `compatibleDeclarationObjectDefined` query
    "c/misra/compatible-declaration-object-defined" and
  ruleId = "RULE-8-4" and
  category = "required"
  or
  query =
    // `Query` instance for the `compatibleDeclarationFunctionDefined` query
    Declarations4Package::compatibleDeclarationFunctionDefinedQuery() and
  queryId =
    // `@id` for the `compatibleDeclarationFunctionDefined` query
    "c/misra/compatible-declaration-function-defined" and
  ruleId = "RULE-8-4" and
  category = "required"
  or
  query =
    // `Query` instance for the `identifierWithExternalLinkageOneDefinition` query
    Declarations4Package::identifierWithExternalLinkageOneDefinitionQuery() and
  queryId =
    // `@id` for the `identifierWithExternalLinkageOneDefinition` query
    "c/misra/identifier-with-external-linkage-one-definition" and
  ruleId = "RULE-8-6" and
  category = "required"
}

module Declarations4Package {
  Query functionTypesNotInPrototypeFormQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionTypesNotInPrototypeForm` query
      TQueryC(TDeclarations4PackageQuery(TFunctionTypesNotInPrototypeFormQuery()))
  }

  Query declarationsOfAnObjectSameNameAndTypeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `declarationsOfAnObjectSameNameAndType` query
      TQueryC(TDeclarations4PackageQuery(TDeclarationsOfAnObjectSameNameAndTypeQuery()))
  }

  Query declarationsOfAFunctionSameNameAndTypeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `declarationsOfAFunctionSameNameAndType` query
      TQueryC(TDeclarations4PackageQuery(TDeclarationsOfAFunctionSameNameAndTypeQuery()))
  }

  Query compatibleDeclarationObjectDefinedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `compatibleDeclarationObjectDefined` query
      TQueryC(TDeclarations4PackageQuery(TCompatibleDeclarationObjectDefinedQuery()))
  }

  Query compatibleDeclarationFunctionDefinedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `compatibleDeclarationFunctionDefined` query
      TQueryC(TDeclarations4PackageQuery(TCompatibleDeclarationFunctionDefinedQuery()))
  }

  Query identifierWithExternalLinkageOneDefinitionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifierWithExternalLinkageOneDefinition` query
      TQueryC(TDeclarations4PackageQuery(TIdentifierWithExternalLinkageOneDefinitionQuery()))
  }
}
