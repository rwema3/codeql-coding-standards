//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Statements4Query =
  TFloatingPointLoopCountersQuery() or
  TForLoopNotWellFormedQuery() or
  TNonBooleanIfConditionQuery() or
  TNonBooleanIterationConditionQuery()

predicate isStatements4QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `floatingPointLoopCounters` query
    Statements4Package::floatingPointLoopCountersQuery() and
  queryId =
    // `@id` for the `floatingPointLoopCounters` query
    "c/cert/floating-point-loop-counters" and
  ruleId = "FLP30-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `forLoopNotWellFormed` query
    Statements4Package::forLoopNotWellFormedQuery() and
  queryId =
    // `@id` for the `forLoopNotWellFormed` query
    "c/misra/for-loop-not-well-formed" and
  ruleId = "RULE-14-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `nonBooleanIfCondition` query
    Statements4Package::nonBooleanIfConditionQuery() and
  queryId =
    // `@id` for the `nonBooleanIfCondition` query
    "c/misra/non-boolean-if-condition" and
  ruleId = "RULE-14-4" and
  category = "required"
  or
  query =
    // `Query` instance for the `nonBooleanIterationCondition` query
    Statements4Package::nonBooleanIterationConditionQuery() and
  queryId =
    // `@id` for the `nonBooleanIterationCondition` query
    "c/misra/non-boolean-iteration-condition" and
  ruleId = "RULE-14-4" and
  category = "required"
}

module Statements4Package {
  Query floatingPointLoopCountersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `floatingPointLoopCounters` query
      TQueryC(TStatements4PackageQuery(TFloatingPointLoopCountersQuery()))
  }

  Query forLoopNotWellFormedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `forLoopNotWellFormed` query
      TQueryC(TStatements4PackageQuery(TForLoopNotWellFormedQuery()))
  }

  Query nonBooleanIfConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonBooleanIfCondition` query
      TQueryC(TStatements4PackageQuery(TNonBooleanIfConditionQuery()))
  }

  Query nonBooleanIterationConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonBooleanIterationCondition` query
      TQueryC(TStatements4PackageQuery(TNonBooleanIterationConditionQuery()))
  }
}
