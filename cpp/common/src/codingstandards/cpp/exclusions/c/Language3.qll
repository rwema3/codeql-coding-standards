//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Language3Query =
  TLanguageExtensionsShouldNotBeUsedQuery() or
  TOccurrenceOfUndefinedBehaviorQuery()

predicate isLanguage3QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `languageExtensionsShouldNotBeUsed` query
    Language3Package::languageExtensionsShouldNotBeUsedQuery() and
  queryId =
    // `@id` for the `languageExtensionsShouldNotBeUsed` query
    "c/misra/language-extensions-should-not-be-used" and
  ruleId = "RULE-1-2" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `occurrenceOfUndefinedBehavior` query
    Language3Package::occurrenceOfUndefinedBehaviorQuery() and
  queryId =
    // `@id` for the `occurrenceOfUndefinedBehavior` query
    "c/misra/occurrence-of-undefined-behavior" and
  ruleId = "RULE-1-3" and
  category = "required"
}

module Language3Package {
  Query languageExtensionsShouldNotBeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `languageExtensionsShouldNotBeUsed` query
      TQueryC(TLanguage3PackageQuery(TLanguageExtensionsShouldNotBeUsedQuery()))
  }

  Query occurrenceOfUndefinedBehaviorQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `occurrenceOfUndefinedBehavior` query
      TQueryC(TLanguage3PackageQuery(TOccurrenceOfUndefinedBehaviorQuery()))
  }
}
